---
name: Create Release
# https://dev.to/koddr/github-action-for-release-your-go-projects-as-fast-and-easily-as-possible-20a2
# https://github.com/orgs/community/discussions/25244
on:
  push:
    tags:
      - "v*.*.*"

jobs:
  main-branch-check:
    runs-on: ubuntu-latest
    outputs:
      on_main_branch: ${{ steps.register_tag.outputs.on_main_branch }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git fetch --force --tags
      - uses: rickstaa/action-contains-tag@v1
        id: contains_tag
        with:
          reference: "main"
          tag: "${{ github.ref }}"

      - name: register output
        id: register_tag
        run: |
          echo "retval: ${{ steps.contains_tag.outputs.retval }}"
          echo "::set-output name=on_main_branch::${{ steps.contains_tag.outputs.retval }}"

  release-tag:
    runs-on: ubuntu-latest
    needs: main-branch-check
    if: ${{ needs.main-branch-check.outputs.on_main_branch }} == true

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git fetch --force --tags

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
        id: go

      - name: Create Release
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --rm-dist --config .github/goreleaser-dist.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-docker-image:
    runs-on: ubuntu-latest
    needs: main-branch-check
    if: ${{ needs.main-branch-check.outputs.on_main_branch }} == true
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: prepare
        id: prepare
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/prometheus-awair-exporter
          DOCKER_PLATFORMS=linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          TAGS="--tag ${DOCKER_IMAGE}:latest"
          TAGS="$TAGS --tag ${DOCKER_IMAGE}:$(git rev-parse --short HEAD)"
          GIT_TAG=$(git tag --points-at HEAD | tr -d '\n')
          if [ ! -z "$GIT_TAG" ]; then TAGS="$TAGS --tag ${DOCKER_IMAGE}:${GIT_TAG}"; fi
          echo DOCKER_IMAGE=${DOCKER_IMAGE} >> $GITHUB_ENV
          echo BUILDX_ARGS="--platform ${DOCKER_PLATFORMS} --build-arg VERSION=${GIT_TAG} ${TAGS} --file ./Dockerfile ./" >> $GITHUB_ENV

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin

      - name: Docker Buildx (push)
        run: |
          docker buildx build --output "type=image,push=true" ${{ env.BUILDX_ARGS }}

      - name: Clear
        if: always()
        run: |
          rm -f ${HOME}/.docker/config.json
